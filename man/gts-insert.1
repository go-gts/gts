.\" generated with Ronn/v0.7.3
.\" http://github.com/rtomayko/ronn/tree/0.7.3
.
.TH "GTS\-INSERT" "1" "October 2020" "" ""
.
.SH "NAME"
\fBgts\-insert\fR \- insert guest sequence(s) into the input sequence(s)
.
.SH "SYNOPSIS"
gts\-insert [\-\-version] [\-h | \-\-help] [\fIargs\fR] \fIlocator\fR \fIguest\fR \fIseqin\fR
.
.SH "DESCRIPTION"
\fBgts\-insert\fR takes the primary sequence input and inserts the sequences from the \fIguest\fR sequence input into the locations in the primary sequence input specified by the given \fBlocator\fR\. For each \fIguest\fR sequence, a copy of the primary sequence input is created, and the \fIguest\fR sequence is inserted into each location matching the given \fBlocator\fR string\. Therefore, executing \fBgts\-insert\fR with \fIm\fR \fIguest\fR sequences on a primary sequence input with \fIn\fR sequences will result in a file containing \fIm*n\fR sequences\.
.
.P
A locator is a combination of one of \fBpoint location\fR, \fBrange location\fR, or \fBselector\fR, and a \fBmodifier\fR in the form \fB[selector|point|range][@modifier]\fR\. See gts\-locator(7) for a more in\-depth explanation of a locator\. Refer to the EXAMPLES for some examples to get started\.
.
.P
Features that were present at the point of insertion will be split to form a \fBjoin\fRed location\. Such features can be instead expanded if the \fB\-e\fR or \fB\-\-embed\fR option is provided\. Any features present in the \fIguest\fR sequence will be transferred to the corresponding locations after being inesrted into the \fIhost\fR sequence\.
.
.P
There is also a similar command in gts(1) designated gts\-infix(1)\. While \fBgts\-insert\fR inserts \fIguest\fR sequences into the primary sequence input, gts\-infix(1) inserts the primary sequence input into a \fIhost\fR sequence\. Use \fBgts\-insert\fR when you want to insert into a sequence that you are working on in a pipeline, or to insert a literal sequence (which is not possible with gts\-infix(1)), or when you simply want to use the command as a standalone tool\. Also, note that all of the guest sequences will be read into memory when using \fBgts\-insert\fR, and all of the host sequences will be read into memory when using gts\-infix(1)\. If memory availability may be an issue, make sure to use the command that will read in the smaller file\.
.
.SH "OPTIONS"
.
.TP
\fB<locator>\fR
A locator string ([modifier|selector|point|range][@modifier])\. See gts\-locator(7) for more details\.
.
.TP
\fB<guest>\fR
Guest sequence file (will be interpreted literally if preceded with @)\. See gts\-seqin(7) for a list of currently supported list of sequence formats\.
.
.TP
\fB<seqin>\fR
Input sequence file (may be omitted if standard input is provided)\. See gts\-seqin(7) for a list of currently supported list of sequence formats\.
.
.TP
\fB\-e\fR, \fB\-\-embed\fR
Extend existing feature locations when inserting instead of splitting them\.
.
.TP
\fB\-F <format>\fR, \fB\-\-format=<format>\fR
Output file format (defaults to same as input)\. See gts\-seqout(7) for a list of currently supported list of sequence formats\. The format specified with this option will override the file type detection from the output filename\.
.
.TP
\fB\-\-no\-cache\fR
Do not use or create cache\. See gts\-cache(7) for details\.
.
.TP
\fB\-o <output>\fR, \fB\-\-output=<output>\fR
Output sequence file (specifying \fB\-\fR will force standard output)\. The output file format will be automatically detected from the filename if none is specified with the \fB\-F\fR or \fB\-\-format\fR option\.
.
.SH "EXMAMPLES"
Insert a sequence at position 100:
.
.IP "" 4
.
.nf

$ gts insert 100 <guest> <host>
.
.fi
.
.IP "" 0
.
.P
Insert a sequence 20 bases upstream of each CDS:
.
.IP "" 4
.
.nf

$ gts insert CDS@^\-20 <guest> <host>
.
.fi
.
.IP "" 0
.
.SH "BUGS"
\fBgts\-insert\fR currently has no known bugs\.
.
.SH "AUTHORS"
\fBgts\-insert\fR is written and maintained by Kotone Itaya\.
.
.SH "SEE ALSO"
gts(1), gts\-infix(1), gts\-delete(1), gts\-locator(7), gts\-modifier(7), gts\-selector(7), gts\-seqin(7), gts\-seqout(7)
