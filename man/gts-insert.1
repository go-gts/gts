.\" generated with Ronn/v0.7.3
.\" http://github.com/rtomayko/ronn/tree/0.7.3
.
.TH "GTS\-INSERT" "1" "October 2020" "" ""
.
.SH "NAME"
\fBgts\-insert\fR \- insert guest sequence(s) into the input sequence(s)
.
.SH "SYNOPSIS"
gts\-insert [\-\-version] [\-h | \-\-help] [\fIargs\fR] \fIlocator\fR \fIguest\fR \fIhost\fR
.
.SH "DESCRIPTION"
\fBgts\-insert\fR takes two sequence inputs: a \fIguest\fR sequence input and a \fIhost\fR sequence input, and inserts the sequences contained in the \fIguest\fR sequence input into the sequences contained in the \fIhost\fR sequence input\. If the \fIhost\fR sequence input is omitted, standard input will be read instead\. For each sequence in the \fIguest\fR sequence input, a copy of each of the \fIhost\fR sequence input will be created\. Each \fIguest\fR sequence will then be inserted into the location(s) specified by the \fBlocator\fR in the \fIhost\fR sequence\.
.
.P
A locator consists of a location specifier and a modifier\. A location specifier may be a \fBmodifier\fR, a \fBpoint location\fR, a \fBrange location\fR, or a \fBselector\fR\. The syntax for a locator is \fB[specifier][@modifier]\fR\. See gts\-locator(7) for a more in\-depth explanation of a locator\. Refer to the EXAMPLES for some examples to get started\.
.
.P
Features that were present at the point of insertion will be split to form a \fBjoin\fRed location\. Such features can be instead expanded if the \fB\-e\fR or \fB\-\-embed\fR option is provided\. Any features present in the \fIguest\fR sequence will be transferred to the corresponding locations after being inesrted into the \fIhost\fR sequence\.
.
.P
There is also a similar command in gts(1) designated gts\-infix(1)\. While \fBgts\-insert\fR inserts \fIguest\fR sequences into the primary sequence input, gts\-infix(1) inserts the primary sequence input into the \fIhost\fR sequences\. Use \fBgts\-insert\fR when you want to insert another sequence into the sequence that ou are working on in a pipeline\. Note that all of the \fIguest\fR sequences will be read into memory when using \fBgts\-insert\fR, and all of the \fIhost\fR sequences will be read into memory when using gts\-infix(1)\. If memory availability may be an issue, make sure to use the command that will read in the smaller file\.
.
.SH "OPTIONS"
.
.TP
\fB<locator>\fR
A locator string (\fB[specifier][@modifier]\fR)\. See gts\-locator(7) for more details\.
.
.TP
\fB<guest>\fR
Guest sequence file (will be interpreted literally if preceded with @)\. See gts\-seqin(7) for a list of currently supported list of sequence formats\.
.
.TP
\fB<host>\fR
Input sequence file (may be omitted if standard input is provided)\. See gts\-seqin(7) for a list of currently supported list of sequence formats\.
.
.TP
\fB\-e\fR, \fB\-\-embed\fR
Extend existing feature locations when inserting instead of splitting them\.
.
.TP
\fB\-F <format>\fR, \fB\-\-format=<format>\fR
Output file format (defaults to same as input)\. See gts\-seqout(7) for a list of currently supported list of sequence formats\. The format specified with this option will override the file type detection from the output filename\.
.
.TP
\fB\-\-no\-cache\fR
Do not use or create cache\. See gts\-cache(7) for details\.
.
.TP
\fB\-o <output>\fR, \fB\-\-output=<output>\fR
Output sequence file (specifying \fB\-\fR will force standard output)\. The output file format will be automatically detected from the filename if none is specified with the \fB\-F\fR or \fB\-\-format\fR option\.
.
.SH "EXMAMPLES"
Insert a sequence at position 100:
.
.IP "" 4
.
.nf

$ gts insert 100 <guest> <host>
.
.fi
.
.IP "" 0
.
.P
Insert a sequence 20 bases upstream of each CDS:
.
.IP "" 4
.
.nf

$ gts insert CDS@^\-20 <guest> <host>
.
.fi
.
.IP "" 0
.
.SH "BUGS"
\fBgts\-insert\fR currently has no known bugs\.
.
.SH "AUTHORS"
\fBgts\-insert\fR is written and maintained by Kotone Itaya\.
.
.SH "SEE ALSO"
gts(1), gts\-infix(1), gts\-delete(1), gts\-locator(7), gts\-modifier(7), gts\-selector(7), gts\-seqin(7), gts\-seqout(7)
