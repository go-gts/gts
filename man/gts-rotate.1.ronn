# gts-rotate -- shift the coordinates of a circular sequence

## SYNOPSIS

gts-rotate [--version] [-h | --help] [<args>] <amount> <seqin>

## DESCRIPTION

**gts-rotate** takes a single sequence input and shifts the sequence so that
the position matching the location specified by the given `locator` comes to
the start of the sequence file. A locator is a combination of one of
`point location`, `range location`, or `selector`, and a `modifier` in the form
`[selector|point|range][@modifier]`. See gts-locator(7) for a more in-depth
explanation of a locator. Refer to the EXAMPLES for some examples to get
started.

The topology of a sequence that is rotated will be changed to circular.

## OPTIONS

  * `<locator>`:
    A locator string ([selector|point|range][@modifier]).

  * `<seqin>`:
    Input sequence file (may be omitted if standard input is provided). See
    gts-seqin(7) for a list of currently supported list of sequence formats.

  * `-F <format>`, `--format=<format>`:
    Output file format (defaults to same as input). See gts-seqout(7) for a
    list of currently supported list of sequence formats. The format specified
    with this option will override the file type detection from the output
    filename.

  * `-o <output>`, `--output=<output>`:
    Output sequence file (specifying `-` will force standard output). The
    output file format will be automatically detected from the filename if none
    is specified with the `-F` or `--format` option.

## EXAMPLES

Rotate a sequence 100 bases:

    $ gts rotate 100 <seqin>

Rotate a sequence to the first CDS in the sequence:

    $ gts rotate CDS <seqin>

## BUGS

**gts-rotate** currently has no known bugs.

## AUTHORS

**gts-rotate** is written and maintained by Kotone Itaya.

## SEE ALSO

gts(1), gts-locator(7), gts-modifier(7), gts-selector(7), gts-seqin(7),
gts-seqout(7)